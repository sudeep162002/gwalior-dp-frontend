{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/error/error.component.ts","./src/app/components/error/error.component.html","./src/environments/environment.ts","./src/app/components/edit/edit.component.ts","./src/app/components/edit/edit.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/services/exel.service.ts","./src/services/pdf-service.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/services/api.service.ts","./src/app/components/add-new/add-new.component.ts","./src/app/components/add-new/add-new.component.html","./src/app/app-routing.module.ts","./src/app/components/landing-page/landing-page.component.ts","./src/app/components/landing-page/landing-page.component.html","./src/app/components/card-details/card-details.component.ts","./src/app/components/card-details/card-details.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- header.component.html -->\n\n<header class=\"app-header\">\n    <div class=\"logo\"></div>\n    <nav class=\"nav-menu\">\n      <a routerLink=\"/\">Home</a>\n      <a routerLink=\"/add-new\">Add-new</a>\n      <a routerLink=\"/contact\">Contact</a>\n      <!-- Add more navigation links as needed -->\n    </nav>\n  </header>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error works its testing docker file !</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {User} from '../../types/userData';\nimport { ApiService } from '../../../services/api.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {LandingPageComponent} from '../landing-page/landing-page.component'\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(private fb: FormBuilder,@Inject(MAT_DIALOG_DATA) public family: User,private apiService: ApiService,private dialogRef: MatDialogRef<EditComponent>,private _snackBar: MatSnackBar,private location: Location) {\n    this.createForm();\n  }\n\n\n  \n  ngOnInit(): void {\n    \n  }\n\n  familyForm: FormGroup;\n  updatedUser: User;\n  \n  createForm() {\n    this.familyForm = this.fb.group({\n      \n      fullName: ['', Validators.required],\n      ritwickName: ['', Validators.required],\n      swastyayani: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      istavrity: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      acharyavrity: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      dakshina: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      sangathani: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      ritwicki: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      proname: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      anandabazar: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      srimandir: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      parivrity: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      misc: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      address: ['', Validators.required]\n    });\n  }\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action);\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n  onSubmit() {\n    // Handle form submission logic here\n    // console.log('Form submitted:', this.familyForm.value);\n    this.updatedUser=this.familyForm.value;\n    // console.log(this.updatedUser)\n    Object.keys(this.updatedUser).forEach(key => {\n      // console.log(this.familyForm.value[key]);\n    \n      if (this.updatedUser[key] === '') {\n        delete this.updatedUser[key];\n      }\n    });\n    \n    // console.log(this.family[0])\n    this.apiService.put(this.family[0], this.updatedUser)\n      .subscribe(data => {\n        // console.log(data.message);\n        if(data.message){\n          this.openSnackBar(data.message,'close!');\n          this.dialogRef.close({ resultData: data.message });\n          if(data.message==='Data successfully updated.'){\n            this.reloadPage();\n          }\n        }\n      });\n  }\n\n  onInputChange(event: Event): void {\n    // Access the value of the input field\n    const inputValue = (event.target as HTMLInputElement).value.toLowerCase();\n    \n    // Do something with the input value, e.g., log it\n    console.log('Input value:', this.family[1]);\n    this.family[1].forEach(mem => {\n      if (mem.fullName.toLowerCase().includes(inputValue)) {\n        Object.keys(mem).forEach(val => {\n          if(val!='fullName'){\n            const control = this.familyForm.get(val);\n          if (control) {\n            control.setValue(mem[val]);\n          }\n          }\n          \n\n        });\n        \n      }\n    });\n    \n    // console.log(this.familyForm)\n      \n  }\n  \n}\n","<!-- family-form.component.html -->\n<div class=\"form-div\">\n\n<form [formGroup]=\"familyForm\" (ngSubmit)=\"onSubmit()\">\n\n    <!-- your-component.component.html -->\n    <label for=\"fullName\">Full Name: *</label>\n    <input type=\"text\" id=\"fullName\" formControlName=\"fullName\" required (input)=\"onInputChange($event)\">\n\n    \n  \n    <label for=\"ritwickName\">Ritwick Name:</label>\n    <input type=\"text\" id=\"ritwickName\" formControlName=\"ritwickName\">\n  \n    <label for=\"swastyayani\">Swastyayani:</label>\n    <input type=\"text\" id=\"swastyayani\" formControlName=\"swastyayani\">\n    <div *ngIf=\"familyForm.get('swastyayani').hasError('pattern') && familyForm.get('swastyayani').touched\" class=\"error-message\">\n      Swastyayani must be a number\n    </div>\n  \n    <label for=\"istavrity\">Istavrity:</label>\n    <input type=\"text\" id=\"istavrity\" formControlName=\"istavrity\">\n    <div *ngIf=\"familyForm.get('istavrity').hasError('pattern') && familyForm.get('istavrity').touched\" class=\"error-message\">\n      istavrity must be a number\n    </div>\n  \n    <label for=\"acharyavrity\">Acharyavrity:</label>\n    <input type=\"text\" id=\"acharyavrity\" formControlName=\"acharyavrity\">\n    <div *ngIf=\"familyForm.get('acharyavrity').hasError('pattern') && familyForm.get('acharyavrity').touched\" class=\"error-message\">\n      acharyavrity must be a number\n    </div>\n  \n    <label for=\"dakshina\">Dakshina:</label>\n    <input type=\"text\" id=\"dakshina\" formControlName=\"dakshina\">\n    <div *ngIf=\"familyForm.get('dakshina').hasError('pattern') && familyForm.get('dakshina').touched\" class=\"error-message\">\n      dakshina must be a number\n    </div>\n  \n    <label for=\"sangathani\">Sangathani:</label>\n    <input type=\"text\" id=\"sangathani\" formControlName=\"sangathani\">\n    <div *ngIf=\"familyForm.get('sangathani').hasError('pattern') && familyForm.get('sangathani').touched\" class=\"error-message\">\n      sangathani must be a number\n    </div>\n  \n    <label for=\"ritwicki\">Ritwicki:</label>\n    <input type=\"text\" id=\"ritwicki\" formControlName=\"ritwicki\">\n    <div *ngIf=\"familyForm.get('ritwicki').hasError('pattern') && familyForm.get('ritwicki').touched\" class=\"error-message\">\n      ritwicki must be a number\n    </div>\n  \n    <label for=\"proname\">Proname:</label>\n    <input type=\"text\" id=\"proname\" formControlName=\"proname\">\n    <div *ngIf=\"familyForm.get('proname').hasError('pattern') && familyForm.get('proname').touched\" class=\"error-message\">\n      proname must be a number\n    </div>\n  \n    <label for=\"anandabazar\">Anandabazar:</label>\n    <input type=\"text\" id=\"anandabazar\" formControlName=\"anandabazar\">\n    <div *ngIf=\"familyForm.get('anandabazar').hasError('pattern') && familyForm.get('anandabazar').touched\" class=\"error-message\">\n      anandabazar must be a number\n    </div>\n  \n    <label for=\"srimandir\">Srimandir:</label>\n    <input type=\"text\" id=\"srimandir\" formControlName=\"srimandir\">\n    <div *ngIf=\"familyForm.get('srimandir').hasError('pattern') && familyForm.get('srimandir').touched\" class=\"error-message\">\n      srimandir must be a number\n    </div>\n  \n    <label for=\"parivrity\">Parivrity:</label>\n    <input type=\"text\" id=\"parivrity\" formControlName=\"parivrity\">\n    <div *ngIf=\"familyForm.get('parivrity').hasError('pattern') && familyForm.get('parivrity').touched\" class=\"error-message\">\n      parivrity must be a number\n    </div>\n  \n    <label for=\"misc\">Miscellaneous:</label>\n    <input type=\"text\" id=\"misc\" formControlName=\"misc\">\n    <div *ngIf=\"familyForm.get('misc').hasError('pattern') && familyForm.get('misc').touched\" class=\"error-message\">\n      misc must be a number\n    </div>\n\n    <label for=\"address\">Address:</label>\n    <input type=\"text\" id=\"address\" formControlName=\"address\">\n    <div *ngIf=\"familyForm.get('address').hasError('pattern') && familyForm.get('address').touched\" class=\"error-message\">\n      misc must be a number\n    </div>\n  \n    <button type=\"submit\">Submit</button>\n  </form>\n    \n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- footer.component.html -->\n\n<footer class=\"app-footer\">\n    <p>&copy; 2023 Your Company. All rights reserved.</p>\n  </footer>\n  \n","import { Injectable } from '@angular/core';\nimport {User} from '../app/types/userData';\nimport * as XLSX from 'xlsx';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExelService {\n\n  constructor() { }\n\n\n  convertJsonToXlsx(jsonData: User[]): Observable<Blob> {\n    const ws = XLSX.utils.json_to_sheet(jsonData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n    // Use XLSX.write to get the raw data\n    const rawXlsxData = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n\n    // Convert raw data to a Blob with the correct MIME type\n    const blob = new Blob([rawXlsxData], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n\n    return new Observable((observer) => {\n      observer.next(blob);\n      observer.complete();\n    });\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport * as html2pdf from 'html2pdf.js';\nimport { Observable } from 'rxjs';\nimport * as htmlToImage from 'html-to-image';\n\nimport { saveAs } from 'file-saver';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PdfService {\n\n  convertHtmlToImage(html: string): Observable<Blob> {\n    return new Observable(observer => {\n      const container = document.createElement('div');\n      container.innerHTML = html;\n      \n      html2pdf.toBlob(container, { quality: 1 })\n        .then(blob => {\n          console.log(blob)\n          observer.next(blob);\n          observer.complete();\n        })\n        .catch(error => observer.error(error));\n    });\n  }\n\n  downloadImage(blob: Blob, filename: string): void {\n    saveAs(blob, filename);\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'ims';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ErrorComponent } from './components/error/error.component';\r\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { CardDetailsComponent } from './components/card-details/card-details.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AddNewComponent } from './components/add-new/add-new.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { EditComponent } from './components/edit/edit.component';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ErrorComponent,\r\n    LandingPageComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    CardDetailsComponent,\r\n    AddNewComponent,\r\n    EditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule,\r\n    MatProgressSpinnerModule,\r\n    FormsModule,\r\n    MatCardModule,\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule, MatInputModule, MatButtonModule,MatSnackBarModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// api.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport axios, { AxiosRequestConfig } from 'axios';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  private baseURL = 'https://ims-backend-c5de.onrender.com'; // Replace with your API base URL\r\n  private authToken = 'Sudeep@16'; // Replace with your actual authorization token\r\n\r\n  constructor() { }\r\n\r\n  private getAxiosConfig(): AxiosRequestConfig {\r\n    return {\r\n      headers: {\r\n        'Authorization': `${this.authToken}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n  }\r\n\r\n  get(endpoint: string): Observable<any> {\r\n    const url = `${this.baseURL}/${endpoint}`;\r\n    return new Observable(observer => {\r\n      axios.get(url, this.getAxiosConfig())\r\n        .then(response => {\r\n          observer.next(response.data);\r\n          observer.complete();\r\n        })\r\n        .catch(error => {\r\n          observer.error(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  post(endpoint: string, data: any): Observable<any> {\r\n    const url = `${this.baseURL}/${endpoint}`;\r\n    return new Observable(observer => {\r\n      axios.post(url, data, this.getAxiosConfig())\r\n        .then(response => {\r\n          observer.next(response.data);\r\n          observer.complete();\r\n        })\r\n        .catch(error => {\r\n          observer.error(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  put(userId: string, data: any): Observable<any> {\r\n    const url = `${this.baseURL}/update-user/${userId}`;\r\n    return new Observable(observer => {\r\n      axios.put(url, data, this.getAxiosConfig())\r\n        .then(response => {\r\n          observer.next(response.data);\r\n          observer.complete();\r\n        })\r\n        .catch(error => {\r\n          observer.error(error);\r\n        });\r\n    });\r\n  }\r\n  \r\n\r\n  // Add methods for other HTTP methods as needed (e.g., put, delete, etc.)\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../../services/api.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MatDialogRef,MatDialog } from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-new',\n  templateUrl: './add-new.component.html',\n  styleUrls: ['./add-new.component.scss']\n})\nexport class AddNewComponent implements OnInit {\n\n\n  constructor(private fb: FormBuilder,private apiService: ApiService,private _snackBar: MatSnackBar,private router: Router) {\n    this.createForm();\n  }\n\n  ngOnInit(): void {\n  }\n\n  familyForm: FormGroup;\n\n  \n  createForm() {\n    this.familyForm = this.fb.group({\n      userId: ['', Validators.required],\n      fullName: ['', Validators.required],\n      ritwickName: ['', Validators.required],\n      swastyayani: ['', Validators.required],\n      istavrity: ['', Validators.required],\n      acharyavrity: ['', Validators.required],\n      dakshina: ['', Validators.required],\n      sangathani: ['', Validators.required],\n      ritwicki: ['', Validators.required],\n      proname: ['', Validators.required],\n      anandabazar: ['', Validators.required],\n      srimandir: ['', Validators.required],\n      parivrity: ['', Validators.required],\n      misc: ['', Validators.required],\n      address: ['', Validators.required]\n    });\n  }\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action);\n  }\n  onSubmit() {\n    // Handle form submission logic here\n    console.log('Form submitted:', this.familyForm.value);\n\n    this.apiService.post('insert-user', this.familyForm.value)\n      .subscribe(data => {\n        // console.log(data.message);\n        if(data){\n          console.log(data.message);\n          this.openSnackBar(data.message,'close!');\n           if(data.message==='Data successfully inserted.'){\n            this.router.navigate(['/']);\n           }\n        }\n      });\n  }\n\n}\n","<!-- family-form.component.html -->\n\n<form [formGroup]=\"familyForm\" (ngSubmit)=\"onSubmit()\">\n  <label for=\"fullName\">Family-code:*</label>\n  <input type=\"text\" id=\"id\" formControlName=\"userId\" required>\n\n  <label for=\"fullName\">Full Name:*</label>\n  <input type=\"text\" id=\"fullName\" formControlName=\"fullName\" required>\n\n  <label for=\"ritwickName\">Ritwick Name:*</label>\n  <input type=\"text\" id=\"ritwickName\" formControlName=\"ritwickName\">\n\n  <label for=\"swastyayani\">Swastyayani:</label>\n  <input type=\"text\" id=\"swastyayani\" formControlName=\"swastyayani\">\n\n  <label for=\"istavrity\">Istavrity:</label>\n  <input type=\"text\" id=\"istavrity\" formControlName=\"istavrity\">\n\n  <label for=\"acharyavrity\">Acharyavrity:</label>\n  <input type=\"text\" id=\"acharyavrity\" formControlName=\"acharyavrity\">\n\n  <label for=\"dakshina\">Dakshina:</label>\n  <input type=\"text\" id=\"dakshina\" formControlName=\"dakshina\">\n\n  <label for=\"sangathani\">Sangathani:</label>\n  <input type=\"text\" id=\"sangathani\" formControlName=\"sangathani\">\n\n  <label for=\"ritwicki\">Ritwicki:</label>\n  <input type=\"text\" id=\"ritwicki\" formControlName=\"ritwicki\">\n\n  <label for=\"proname\">Proname:</label>\n  <input type=\"text\" id=\"proname\" formControlName=\"proname\">\n\n  <label for=\"anandabazar\">Anandabazar:</label>\n  <input type=\"text\" id=\"anandabazar\" formControlName=\"anandabazar\">\n\n  <label for=\"srimandir\">Srimandir:</label>\n  <input type=\"text\" id=\"srimandir\" formControlName=\"srimandir\">\n\n  <label for=\"parivrity\">Parivrity:</label>\n  <input type=\"text\" id=\"parivrity\" formControlName=\"parivrity\">\n\n  <label for=\"misc\">Miscellaneous:</label>\n  <input type=\"text\" id=\"misc\" formControlName=\"misc\">\n\n  <label for=\"address\">Address:</label>\n  <input type=\"text\" id=\"address\" formControlName=\"address\">\n\n  <button type=\"submit\">Submit</button>\n</form>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {ErrorComponent} from './components/error/error.component'\r\nimport {LandingPageComponent} from './components/landing-page/landing-page.component'\r\nimport {AddNewComponent} from './components/add-new/add-new.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LandingPageComponent\r\n  },\r\n  // {\r\n  //   path: 'add-new',\r\n  //   loadChildren: () => import('./views/admin-view/admin-view.module').then(m => m.AdminViewModule),\r\n  //   canActivate: [AuthGuardService]\r\n  // },\r\n  // {\r\n  //   path: '',\r\n  //   redirectTo: 'home',\r\n  //   pathMatch: 'full'\r\n  // },\r\n  {\r\n    path: 'add-new',\r\n    component: AddNewComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: ErrorComponent\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CardDetailsComponent } from '../card-details/card-details.component';\r\nimport {EditComponent} from '../edit/edit.component';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport {MatDialogRef,MatDialog } from '@angular/material/dialog';\r\nimport {User,FamilyObject} from '../../types/userData';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { ExelService } from '../../../services/exel.service';\r\n// import {PdfService} from '../../../services/pdf-service.service';\r\nimport { saveAs } from 'file-saver';\r\nimport { PdfService } from '../../../services/pdf-service.service'\r\nimport * as html2pdf from 'html2pdf.js';\r\n\r\n\r\n@Component({\r\n  selector: 'app-landing-page',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.scss'],\r\n  \r\n})\r\nexport class LandingPageComponent implements OnInit {\r\n\r\n  constructor(public dialog: MatDialog,private apiService: ApiService,private _snackBar: MatSnackBar,private excelService: ExelService,private pdfService: PdfService) { }\r\n \r\n  cardArray : User[]=[];\r\n  searchTerm: string = ''; // Add a property for the search term\r\n  filteredCardArray: any[] = [];\r\n  aggregatedUsersObject: { [userId: string]: User[] } = {};\r\n  aggregatedUsers: [string, User[]][]; \r\n  cc: number=0;\r\n\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this._snackBar.open(message, action);\r\n  }\r\n\r\n  openCardDetailsDialog(user: User): void {\r\n    this.dialog.open(CardDetailsComponent, {\r\n      maxHeight: '650px',\r\n      data: user\r\n    });\r\n  }\r\n\r\n  openEditDialog(user: User): void {\r\n    const dialogRef =this.dialog.open(EditComponent, {\r\n      maxHeight: '650px',\r\n      data: user\r\n    });\r\n\r\n\r\n     \r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // Handle the result data sent from the dialog\r\n      // console.log('Dialog closed with result:', result);\r\n      if(result && result.resultData=='Data successfully updated.'){\r\n\r\n        // console.log(result.resultData);\r\n        // console.log(this.aggregatedUsers)\r\n        this.openSnackBar(result.resultData,'close!');\r\n      }\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n    this.apiService.get('get-users')\r\n      .subscribe(data => {\r\n        Object.keys(data).forEach(key => {\r\n          const user = data[key];\r\n              const { userId } = user;\r\n              if (!this.aggregatedUsersObject[userId]) {\r\n                this.aggregatedUsersObject[userId] = [];\r\n              }\r\n              this.aggregatedUsersObject[userId].push(user);\r\n        });\r\n        this.aggregatedUsers=Object.entries( this.aggregatedUsersObject);\r\n        // console.log('aggregator user is this',this.aggregatedUsers);\r\n      });\r\n\r\n      \r\n  }\r\n  cti(value: string): number | null {\r\n    const floatValue = parseFloat(value);\r\n  \r\n    // Check if the result is NaN (Not a Number)\r\n    if (isNaN(floatValue)) {\r\n      // console.error(`Failed to convert \"${value}\" to a float.`);\r\n      return null; // or handle the error in another way\r\n    }\r\n  \r\n    return floatValue;\r\n  }\r\n  \r\n  total(card: User): number {\r\n    let total: number;\r\n    total = 0; // Or whatever value you want to assign to total\r\n    // console.log('Individual total is', card);\r\n    Object.keys(card).forEach(key => {\r\n      if(key===\"swastyayani\"||key==='istavrity'|| key==='acharyavrity'|| key==='dakshina'|| key==='sangathani'|| key==='ritwicki' ||key==='proname' ||key==='anandabazar' ||key==='srimandir' ||key==='parivrity'){\r\n        // console.log(key);\r\n        let v=this.cti(card[key]);\r\n        if(v){\r\n          \r\n          total+=v;\r\n        }\r\n      }\r\n    });\r\n    return total;\r\n  }\r\n\r\n  Familytotal(card: User[]): number {\r\n    // console.log('this is family tptal card', card)\r\n    let total: number;\r\n    // Your calculation logic here\r\n    total = 0; // Placeholder value, replace with your logic\r\n    // console.log('family total object is', card);\r\n    for(let i=0;i<card.length;i++){\r\n      total+=this.total(card[i]);\r\n    }\r\n    return total;\r\n  }\r\n\r\n\r\n// Assuming aggregatedUsers is defined as [string, User[]][]\r\ndelete(familyId: string): void {\r\n  this.aggregatedUsers = this.aggregatedUsers.filter(([id, _]) => id !== familyId);\r\n}\r\n\r\n// searchTerm: string = '';\r\n\r\n\r\n  search(): void {\r\n    // Perform search logic based on the searchTerm\r\n    const input = this.searchTerm.trim().toLowerCase();\r\n    this.cc+=1;\r\n    this.aggregatedUsers = this.aggregatedUsers.filter(card => {\r\n      let matchFound = false;\r\n    \r\n      card[1].forEach(value => {\r\n        if (value.fullName.toLowerCase().includes(input)) {\r\n          matchFound = true;\r\n        }\r\n      });\r\n    \r\n      return matchFound;\r\n    });\r\n    \r\n    \r\n\r\n    console.log('filtered array is :', this.filteredCardArray);\r\n  }\r\n  onEnterKeyPress(event: KeyboardEvent): void {\r\n    if (event.key === 'Enter') {\r\n      this.search();\r\n    }\r\n  }\r\n\r\n  goBack(): void {\r\n    this.cc=0;\r\n    \r\n        this.aggregatedUsers=Object.entries( this.aggregatedUsersObject);\r\n        // console.log('aggregator user is this',this.aggregatedUsers);\r\n      \r\n    // Use the Angular Router to navigate back\r\n    \r\n  }\r\n  \r\n  createPdfHtml(jsonData: any): string {\r\n    console.log('this is html json data',jsonData);\r\n    let html = '<html><body>';\r\n  \r\n    jsonData.forEach((rowArray, index) => {\r\n      const familyCodeRow  = rowArray.find((row) => row['Family Code No.']);\r\n      // const familyCodeRow = temp.find((row) => row['address']);\r\n  \r\n      if (familyCodeRow && familyCodeRow['Family Code No.']) {\r\n        html += `<div <strong style=\"color: #333;\">Family Code No.: ${familyCodeRow['Family Code No.']}</strong> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Address is: ${rowArray[0].address}</div>`;\r\n      }\r\n\r\n      // if (rowArray[0].address) {\r\n      //   html += `<div style=\"margin-top: 10px;\">Adress is: ${rowArray[0].address}</div>`;\r\n      // }\r\n  \r\n      if (rowArray.length > 0) {\r\n        // Regular data table\r\n        html += '<table style=\"width:100%; border-collapse: collapse; margin-top: 10px;\">';\r\n  \r\n        // html += `<tr>${Object.keys(rowArray[0]).filter(key => key !== '_id' && key !== 'Family Code No.' && key !== 'userId'&& key !== '__v').map(\r\n        //   (key) => `<th style=\"border: 1px solid #000; padding: 5px;\">${key}</th>`\r\n        // ).join('')}</tr>`;\r\n  \r\n        // rowArray.forEach((row) => {\r\n        //   // Add \"Total\" property to each row\r\n        //   row['Total'] = this.total(row);\r\n  \r\n        //    `<tr>${Object.entries(row).filter(([key]) => key !== '_id' && key !== 'Family Code No.' && key !== 'userId' && key !== '__v').map(\r\n        //     ([key, value]) => `<td style=\"border: 1px solid #000; padding: 5px;\">${value}</td>`\r\n        //   ).join('')}</tr>`;\r\n        // });\r\n  \r\n        html += '</table>';\r\n  \r\n        // Updated data table\r\n        html += '<table style=\"width:100%; border-collapse: collapse;\">';\r\n  \r\n        html += `<tr>${Object.keys(rowArray[0]).filter(key => key !== '_id' && key !== 'Family Code No.' && key !== 'userId' && key !== '__v'&& key !== 'address').map(\r\n          (key) => `<th style=\"border: 1px solid #000; padding: ${key === 'fullName' || key === 'ritwickName' ? '40px' : '5px'};\">${key}</th>`\r\n        ).join('')}</tr>`;\r\n        \r\n  \r\n        rowArray.forEach((row) => {\r\n          html += `<tr>${Object.entries(row).filter(([key]) => key !== '_id' && key !== 'Family Code No.' && key !== 'userId'&& key !== '__v'&& key !== 'address').map(\r\n            ([key, value]) => `<td style=\"border: 1px solid #000; padding: 5px;\">${value}</td>`\r\n          ).join('')}</tr>`;\r\n        });\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\">Total :</td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\"></td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\"></td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\"></td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\"></td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\"></td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\"></td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\"></td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\"></td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\"></td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\"></td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\"></td>`;\r\n        html+=`<td style=\"border: 1px solid #000; padding: 5px;\">${this.Familytotal(rowArray)}</td>`\r\n  \r\n        html += '</table>';\r\n      }\r\n      // console.log('this is row array',rowArray)\r\n  \r\n      // Add blank space of three lines between different families\r\n      if (index < jsonData.length - 1) {\r\n        html += '<br><br><br>';\r\n      }\r\n    });\r\n  \r\n    html += '</body></html>';\r\n  \r\n    \r\n    return html;\r\n  }\r\n  \r\n  \r\n downloadPdf(pdfContent: string, filename: string): void {\r\n    const pdfOptions = {\r\n      margin: 10,\r\n      filename: filename,\r\n      image: { type: 'jpeg', quality: 0.98 },\r\n      html2canvas: { scale: 2,width: 1100},\r\n      jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\r\n    };\r\n    html2pdf().from(pdfContent).set(pdfOptions).save();\r\n    \r\n  }\r\n  \r\n  printDoc(): void {\r\n    // console.log('this is agrigate user',this.aggregatedUsers)\r\n    const allData = this.aggregatedUsers.map(([familyCode, jsonData]) => [...jsonData, { 'Family Code No.': familyCode }]);\r\n    \r\n    const htmlContent = this.createPdfHtml(allData);\r\n    \r\n    // const pdfContent = createPdfHtml(jsonData);\r\n    this.downloadPdf(htmlContent, `istvirty-${this.getCurrentMonth().toLowerCase()}.pdf`);\r\n    \r\n  }\r\n getCurrentMonth() {\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    const currentDate = new Date();\r\n    return months[currentDate.getMonth()];\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<!-- landing-page.component.html -->\n\n<div class=\"search-bar\" >\n  <button class=\"back-button\" mat-icon-button (click)=\"goBack()\" *ngIf=\"cc>=1\">\n    <i class=\"fas fa-arrow-left\"></i>\n  </button>\n  <input class=\"search-input\" type=\"text\" [(ngModel)]=\"searchTerm\" placeholder=\"Member-Name....\" (keyup.enter)=\"onEnterKeyPress($event)\">\n  <button class=\"search-button\" (click)=\"search()\">\n    <i class=\"fas fa-search\"></i> <!-- Use \"fas\" for solid icons, or \"far\" for regular icons -->\n  </button>\n</div>\n\n<div class=\"print-par\">\n  <div class=\"print\" (click)=\"printDoc()\" >\n    <i class=\"fas fa-print fa-4x\"></i>\n  </div>\n</div>\n\n<div class=\"container\">\n  <div class=\"loder\" *ngIf=\"aggregatedUsers===undefined\"><mat-spinner></mat-spinner></div>\n  <mat-card *ngFor=\"let card of aggregatedUsers\" class=\"wide-card\" >\n\n    <div class=\"ch-par\">\n      <mat-card-header>\n        \n          <mat-card-title>\n            {{ card[0] }}\n          </mat-card-title>\n          <div class=\"icons-main\">\n            <div class=\"edit\" (click)=\"openEditDialog(card)\"><i class=\"fas fa-edit\"></i></div>\n            <div class=\"view\" (click)=\"openCardDetailsDialog(card)\"><i class=\"fas fa-eye\"></i></div>\n            <div class=\"delete\"(click)=\"delete(card[0])\"><i class=\"fas fa-trash-alt\"></i></div>\n          </div>\n          <!-- <div class=\"checkbox\"><i class=\"fas fa-trash-alt\"></i></div> -->\n        \n        \n      </mat-card-header>\n  </div>\n    <mat-card-content  *ngFor=\"let u of card[1]\">\n      <div class=\"mcc-main\">\n        <p>{{ u.fullName }}</p>\n        <div class=\"indi-total\">{{total(u)}}</div>\n      </div>\n      \n    </mat-card-content>\n    <mat-card-content >\n      <div class=\"mcc-main\">\n        <p>Total</p>\n        <div class=\"indi-total\">{{ Familytotal(card[1]) }}</div>\n\n      </div>\n      \n    </mat-card-content>\n\n  </mat-card>\n</div>\n\n\n\n","// card-details.component.ts\r\n\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-card-details',\r\n  templateUrl: './card-details.component.html',\r\n  styleUrls: ['./card-details.component.scss']\r\n})\r\nexport class CardDetailsComponent {\r\n// card: any;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public family: any) { }\r\n\r\n}\r\n","<!-- card-details.component.html -->\n<div class=\"par\">\n\n    <mat-card class=\"user-details\" *ngFor=\"let card of family[1]\">\n        <mat-card-content >\n            <p>Full Name: {{ card.fullName }}</p>\n            <p>Ritwick Name: {{ card.ritwickName }}</p>\n            <p>Swastyayani: {{ card.swastyayani }}</p>\n            <p>Istavrity: {{ card.istavrity }}</p>\n            <p>Acharyavrity: {{ card.acharyavrity }}</p>\n            <p>Dakshina: {{ card.dakshina }}</p>\n            <p>Sangathani: {{ card.sangathani }}</p>\n            <p>Ritwicki: {{ card.ritwicki }}</p>\n            <p>Proname: {{ card.proname }}</p>\n            <p>Anandabazar: {{ card.anandabazar }}</p>\n            <p>Srimandir: {{ card.srimandir }}</p>\n            <p>Parivrity: {{ card.parivrity }}</p>\n            <p>Misc: {{ card.misc }}</p>\n            <p>Address: {{ card.address }}</p>\n        </mat-card-content>\n    </mat-card>\n\n<!-- <div class=\"user-details\" *ngFor=\"let card of family[1]\">\n    \n    <p>Full Name: {{ card.fullName }}</p>\n    <p>Ritwick Name: {{ card.ritwickName }}</p>\n    <p>Swastyayani: {{ card.swastyayani }}</p>\n    <p>Istavrity: {{ card.istavrity }}</p>\n    <p>Acharyavrity: {{ card.acharyavrity }}</p>\n    <p>Dakshina: {{ card.dakshina }}</p>\n    <p>Sangathani: {{ card.sangathani }}</p>\n    <p>Ritwicki: {{ card.ritwicki }}</p>\n    <p>Proname: {{ card.proname }}</p>\n    <p>Anandabazar: {{ card.anandabazar }}</p>\n    <p>Srimandir: {{ card.srimandir }}</p>\n    <p>Parivrity: {{ card.parivrity }}</p>\n    <p>Misc: {{ card.misc }}</p>\n</div> -->\n</div>\n\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}